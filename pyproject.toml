[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "telegram-media-downloader"
version = "1.0.0"
description = "Object-oriented Telegram media downloader for channels"
authors = [{ name = "Jacques Murray", email = "jacquesmmurray@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
keywords = ["telegram", "media", "downloader", "channels"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = ["telethon>=1.24.0"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
telegram-downloader = "telegram_media_downloader.main:main"

[project.urls]
Homepage = "https://github.com/Jacques-Murray/telegram-media-downloader"
Repository = "https://github.com/Jacques-Murray/telegram-media-downloader"
Issues = "https://github.com/Jacques-Murray/telegram-media-downloader/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/telegram_media_downloader"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/tests", "/README.md", "/LICENSE"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["telegram_media_downloader"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "telethon.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/telegram_media_downloader --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src/telegram_media_downloader"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
